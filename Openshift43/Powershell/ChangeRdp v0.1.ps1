#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 7337e677-a2fd-446e-9c23-ca457e473ab7
# Source File: ..\Users\dongsu.lee\Documents\SAPIEN\PowerShell Studio\Projects\test multiform\test multiform.psproj
#------------------------------------------------------------------------
#region Project Recovery Data (DO NOT MODIFY)
<#RecoveryData:
7wIAAB+LCAAAAAAABACVkstugzAQRfeR8g+IPSEBGqsS8aKNqLLoQ0nUbeWYobg1GPmRKn9fN5iI
NizKznfm+tzxI90CFUeQpzXRBE8nnpe+SPEBVJ+Fla8gFRM1jmbzNOyE62WMw2aNURwjWCIUkKjI
gyRZQnBLozigJLlBkKCYHFAaOrPb6lL2pwawBfdlBxc8t3Fe2E9TTjjp3RnG85U/9/FOE6lNM2uU
arP+OLdQgISaQmZqqu0hVv6uFF/BI2F1JmT11qjC7/G6ugUW/wVu6qP4hOCBiwPhFrjoAb1dSSTY
5V4a8HHrUZa+GDXufWl5Q/NeGmMGPiOlGbwAVx6NU4ZSUGoI2WtdYVvRvu/lP7TqWbJ3VhP+Y3gi
FWANSnuV4ZoVLaqx9jS88k0nafjrg38DuNkaRu8CAAA=#>
#endregion
<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2016 v5.3.130
     Generated on:       2017-01-11 오후 5:06
     Generated by:       dongsu.lee
    --------------------------------------------------------------------------------
    .DESCRIPTION
        Script generated by PowerShell Studio 2016
#>


#region Source: Startup.pss
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
ZAMAAB+LCAAAAAAABAC9k99Lw0AMx98F/4djz+Xa2tU6uBZkshdBxYn6mnbpOLwfI7lz9L93mzJF
HwSRkpd8E5IPIYm6x86/Ig1XEEDsHNbe1ZMzmU+a0xMh1C3ptXZgFtrgDVhslgEoxI3cMKv0R/ZQ
c8mMtjUa+aA/I0NjufNkdJuIxw/WVGZ7S8Q8mhAJa4cxEJhE3MVdj+4ahwf/gq5uqwrKrjzPZ8UU
s4uZSo9dv1OWAwe0YzDkk3Yrv2W58GR5FOJ+U+OACLbarf/Cyoq+7Ks+z1dlBgX8znq2ZpSZ5p7w
/0FH+X7yKv36Vc0baArZVmQDAAA=#>
#endregion
#----------------------------------------------
#region Import Assemblies
#----------------------------------------------
[void][Reflection.Assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
[void][Reflection.Assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
[void][Reflection.Assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
#endregion Import Assemblies

#Define a Param block to use custom parameters in the project
#Param ($CustomParameter)

function Main {
<#
    .SYNOPSIS
        The Main function starts the project application.
    
    .PARAMETER Commandline
        $Commandline contains the complete argument string passed to the script packager executable.
    
    .NOTES
        Use this function to initialize your script and to call GUI forms.
		
    .NOTES
        To get the console output in the Packager (Forms Engine) use: 
		$ConsoleOutput (Type: System.Collections.ArrayList)
#>
	Param ([String]$Commandline)
		
	#--------------------------------------------------------------------------
	#TODO: Add initialization script here (Load modules and check requirements)
	
	
	#--------------------------------------------------------------------------
	
	if((Show-MainForm_psf) -eq 'OK')
	{
		
	}
	
	$script:ExitCode = 0 #Set the exit code for the Packager
}







#endregion Source: Startup.pss

#region Source: MainForm.psf
function Show-MainForm_psf
{
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
hRAAAB+LCAAAAAAABADFWE1v00AQvSPxH1Y+cIqSOK0bKhJLbdpKiKZETSncqrU9TZeud6P1usSc
yoEDcEBIFHEB9cDHBSQEHLjwh5rmP7AbJyXEae1AWxTFieN5fjOzb57tVNbB5XsgoiUsMVJfAsJZ
1SjlTcO+egWhym1BWoRhukIorGEf7DombIULP98OtiuFxOEY5NwHVyIZtaFqNKNAgp+/S5jHHwR5
jY23OTTpUA5tDrKYzRf1K4dqIZWhgCqDUApMc6gROpS4tyDa4LvAqk65jC3XmjPnZ2aheH3eQEyl
UjWGqRrI3SHUEyrUqHEmBadBXJ7KtSF4G4SMBpiFUPKmiyksER+YzkOFzuWQOVMpDEPToHXugWGv
KKZUTI0SYLJJHipAab6keErFVJCuaZELD0RTRlRTkQ54TcJaFFLBepWMk1VMDW9KLGSDB0SqVhh2
TWWraF0BwFKxG9CRhr2+1EC95596T390v+0fff2ZhC3vqbMOMKsce7/T29K7lUI/YBidLq5V7AC9
cHVRzdLgQq6FvgPiLJFNWkKmWtP9+OL4zT46+nbYfXmAmuATSlo7Mofm82WrrT4Dvb7VmxKrhBJ9
S551lbs4XiezbOVQycqAifUwVkwGXKxZs6g6WErOxgQxYOcm86Bj2Jmi+9LRCaHMGWnMgmqgKr9O
PI9CLNak3gqxhLILajGUkrMLV5TTpxmdleNn73qvnkwnrRERKD+xzMwaOI0+uxhmyzk0W5pKDJmi
+2L4q8TuBLBJghDTvlMuYne3xikXhr0hwqRXjnmRMmd39/S+bPWPj7nT1NrSxS3yzoWLSyoeh3eW
cJviqA5BgFswnbBGujcIXtVu1d9kWIplhh0KytxXMA0m9j7dI9X10epb43RmOGdlHIS6aq7yYAan
C2Ti6ExqbgbwOmDvNqNRZrbBnJnW1HOWpfoRAz3FOscGRANqO5i19LJO6sHWSMS/Dsp/MOHjt4+7
h+97B6+PfnzpPfre/fB5uolZYO6OHpc1zjIJnmI5uKNr8HbYnk7kyuyzXFmTXp+s8kIdP3l/e7bj
j6aHrlF5Y/jOnOt5XwSSDUu9FPy5sxAE4Cs1QjCMHfwS2X7gckGJcw6KrhROzjrOEs/QZXCc+5ym
M+pH2cshEviBeuj6G67izLa1Xd42Tc8q4hmcznXPp5dSU40LOH+ik91Y8pXC6N8O9i+qhHaThRAA
AA==#>
#endregion
	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$MainForm = New-Object 'System.Windows.Forms.Form'
	$labelPortNumber = New-Object 'System.Windows.Forms.Label'
	$button포트변경실행 = New-Object 'System.Windows.Forms.Button'
	$textboxDaplayMessage = New-Object 'System.Windows.Forms.TextBox'
	$button포트입력하기클릭 = New-Object 'System.Windows.Forms.Button'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	$MainForm_Load={
		#TODO: Initialize Form Controls here
		$button포트변경실행.Enabled = $false
	}
	
	$button포트입력하기클릭_Click={
		#TODO: Place custom script here
		if((Show-ChildForm_psf) -eq 'OK')
		{
			$textboxDaplayMessage.Text = $ChildForm_textboxSendMassage
			$button포트변경실행.Enabled = $true
		}
	}
	
	$textboxDaplayMessage_TextChanged={
		#TODO: Place custom script here
	}
	
	$button포트변경실행_Click={
		#TODO: Place custom script here
		#ChangeRdp $ChildForm_textboxSendMassage
		if ((Show-runForm_psf) -eq 'OK')
		{
			
		}
	}
	
		# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$MainForm.WindowState = $InitialFormWindowState
	}
	
	$Form_StoreValues_Closing=
	{
		#Store the control values
		$script:MainForm_textboxDaplayMessage = $textboxDaplayMessage.Text
	}

	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$button포트변경실행.remove_Click($button포트변경실행_Click)
			$textboxDaplayMessage.remove_TextChanged($textboxDaplayMessage_TextChanged)
			$button포트입력하기클릭.remove_Click($button포트입력하기클릭_Click)
			$MainForm.remove_Load($MainForm_Load)
			$MainForm.remove_Load($Form_StateCorrection_Load)
			$MainForm.remove_Closing($Form_StoreValues_Closing)
			$MainForm.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$MainForm.SuspendLayout()
	#
	# MainForm
	#
	$MainForm.Controls.Add($labelPortNumber)
	$MainForm.Controls.Add($button포트변경실행)
	$MainForm.Controls.Add($textboxDaplayMessage)
	$MainForm.Controls.Add($button포트입력하기클릭)
	$MainForm.AutoScaleDimensions = '6, 13'
	$MainForm.AutoScaleMode = 'Font'
	$MainForm.ClientSize = '292, 120'
	$MainForm.FormBorderStyle = 'FixedSingle'
	$MainForm.Name = 'MainForm'
	$MainForm.StartPosition = 'CenterScreen'
	$MainForm.Text = 'RDP 포트변경'
	$MainForm.add_Load($MainForm_Load)
	#
	# labelPortNumber
	#
	$labelPortNumber.Font = '맑은 고딕 Semilight, 9.75pt, style=Italic'
	$labelPortNumber.Location = '175, 25'
	$labelPortNumber.Name = 'labelPortNumber'
	$labelPortNumber.Size = '100, 23'
	$labelPortNumber.TabIndex = 3
	$labelPortNumber.Text = 'Port Number'
	$labelPortNumber.TextAlign = 'MiddleCenter'
	#
	# button포트변경실행
	#
	$button포트변경실행.Location = '12, 51'
	$button포트변경실행.Name = 'button포트변경실행'
	$button포트변경실행.Size = '147, 42'
	$button포트변경실행.TabIndex = 2
	$button포트변경실행.Text = '포트변경실행'
	$button포트변경실행.UseVisualStyleBackColor = $True
	$button포트변경실행.add_Click($button포트변경실행_Click)
	#
	# textboxDaplayMessage
	#
	$textboxDaplayMessage.BackColor = 'ControlLightLight'
	$textboxDaplayMessage.Enabled = $False
	$textboxDaplayMessage.Font = '맑은 고딕, 15.75pt'
	$textboxDaplayMessage.Location = '165, 51'
	$textboxDaplayMessage.Multiline = $True
	$textboxDaplayMessage.Name = 'textboxDaplayMessage'
	$textboxDaplayMessage.ReadOnly = $True
	$textboxDaplayMessage.Size = '115, 42'
	$textboxDaplayMessage.TabIndex = 1
	$textboxDaplayMessage.TextAlign = 'Center'
	$textboxDaplayMessage.add_TextChanged($textboxDaplayMessage_TextChanged)
	#
	# button포트입력하기클릭
	#
	$button포트입력하기클릭.Anchor = 'None'
	$button포트입력하기클릭.FlatStyle = 'Popup'
	$button포트입력하기클릭.Location = '12, 3'
	$button포트입력하기클릭.Name = 'button포트입력하기클릭'
	$button포트입력하기클릭.Size = '147, 42'
	$button포트입력하기클릭.TabIndex = 0
	$button포트입력하기클릭.Text = '포트입력하기 <<<클릭'
	$button포트입력하기클릭.UseVisualStyleBackColor = $True
	$button포트입력하기클릭.add_Click($button포트입력하기클릭_Click)
	$MainForm.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $MainForm.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$MainForm.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$MainForm.add_FormClosed($Form_Cleanup_FormClosed)
	#Store the control values when form is closing
	$MainForm.add_Closing($Form_StoreValues_Closing)
	#Show the Form
	return $MainForm.ShowDialog()

}
#endregion Source: MainForm.psf

#region Source: Globals.ps1
	#--------------------------------------------
	# Declare Global Variables and Functions here
	#--------------------------------------------
	
	
	#Sample function that provides the location of the script
	function Get-ScriptDirectory
	{
	<#
		.SYNOPSIS
			Get-ScriptDirectory returns the proper location of the script.
	
		.OUTPUTS
			System.String
		
		.NOTES
			Returns the correct path within a packaged executable.
	#>
		[OutputType([string])]
		param ()
		if ($null -ne $hostinvocation)
		{
			Split-Path $hostinvocation.MyCommand.path
		}
		else
		{
			Split-Path $script:MyInvocation.MyCommand.Path
		}
	}
	
	#Sample variable that provides the location of the script
	[string]$ScriptDirectory = Get-ScriptDirectory
	
	
	
#endregion Source: Globals.ps1

#region Source: ChildForm.psf
function Show-ChildForm_psf
{
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
3QwAAB+LCAAAAAAABAC9l0Fv2jAYhu+T9h+sHHaKgEApRYNIJV2lqe2KgHW7VU7yAd4cGzmmhZ2m
abvsMk1qL5U2VZqqaVJv26GH/qIB/2EOAUQb2oSprZAQif36fe3vsRNKNXD4AYj+BpYYqR8+4ays
ZVOGZj5+hFBpV5AWYZhuEgovsAem1SbU3eTCS3X8ZikdaQ9V9htwJJL9DpS1et+X4KVeEebyQz8V
aMNvHS1q0tHeJMZKKhN8dGR1qewKKDPoSoGpjqpdmxJnC/oN/hZY2S4UcN7JrxrF3Apk1ooaYipK
WWuq8UZfzkefL4bfPw1OzzTkBOmFkmgWZ1Jw6ofzVJmrgndAyP5Eu96VvO5gChvEAxbkUV1XdWTk
Sulp1zjpDndBMzeVU6zGogSYrJN3SpBbNXSUW4vVBMtV4cIFUZd9GjiRHrh1wloUYsVBsTTz+grF
yuoSC1nlPpFqRTTTUqFBVLFa0vg5NqAnNTO0Qzf5PTtQQ00E2xy70Yz7we1SetxxqooHLjCv8N69
MyeVj817dWDuDvZ93ILbqFtUVKYWafDz6/Dbe/T39+ng6FhBZ6Sy+Y7UkR8Uulzh1I2sXHSobe7g
sExGMauISiDZUbMmlDCFRkN0oxTdxFF01gmkIe2FvI6ySbI1sP2cudBTG2RR73lwgmJbbcxa4C7K
tj/Xfg2kdEhScq62sQ303qmigcvww/nw5Nfo+LS2UQ03xODsMtwTo+M/wx+Xw48Xw5Oj5XgbH1bj
QiQs+BxVCqpiYkSWmUJieIzCysIj+TZ6skl6j4+qWVo0HxfN8qJZ4FT0IFuapEpXSs7uHSV7bLO7
tSQmzGlzoZkVrtTqyV0jrXb0xI/qNgimvFUDX6XVzN2tpQDLBtVNUtyQsOnMljt68kvBYySG5wn2
Ok8ThXnpwx7xu5iOH+MV7Ly1OA0We+GOvALW1Yt13wdPQQD+tO/kTt/0fIcLSuw7AKmUno163SVE
9yE87nx7xDsGr8gPYyTwoXqJ+x+vTK6ZbxaahuHmMziH471ee/RB5mRxAXdvNLsMkS+l5//OmP8A
SThl+90MAAA=#>
#endregion
	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$form포트입력 = New-Object 'System.Windows.Forms.Form'
	$textboxSendMassage = New-Object 'System.Windows.Forms.TextBox'
	$label사용할RDP포트를입력해주세요 = New-Object 'System.Windows.Forms.Label'
	$buttonOK = New-Object 'System.Windows.Forms.Button'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	
	$form포트입력_Load={
		#TODO: Initialize Form Controls here
		$buttonOK.Enabled = $false
	}
	
	
	$textboxSendMassage_TextChanged={
		#TODO: Place custom script here
		$buttonOK.Enabled = $false
		if ($textboxSendMassage.Text.Trim() -ne '')
		{
			$buttonOK.Enabled = $true
		}
	}
		# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$form포트입력.WindowState = $InitialFormWindowState
	}
	
	$Form_StoreValues_Closing=
	{
		#Store the control values
		$script:ChildForm_textboxSendMassage = $textboxSendMassage.Text
	}

	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$textboxSendMassage.remove_TextChanged($textboxSendMassage_TextChanged)
			$form포트입력.remove_Load($form포트입력_Load)
			$form포트입력.remove_Load($Form_StateCorrection_Load)
			$form포트입력.remove_Closing($Form_StoreValues_Closing)
			$form포트입력.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$form포트입력.SuspendLayout()
	#
	# form포트입력
	#
	$form포트입력.Controls.Add($textboxSendMassage)
	$form포트입력.Controls.Add($label사용할RDP포트를입력해주세요)
	$form포트입력.Controls.Add($buttonOK)
	$form포트입력.AutoScaleDimensions = '6, 13'
	$form포트입력.AutoScaleMode = 'Font'
	$form포트입력.ClientSize = '361, 38'
	$form포트입력.FormBorderStyle = 'FixedSingle'
	$form포트입력.Name = 'form포트입력'
	$form포트입력.StartPosition = 'CenterParent'
	$form포트입력.Text = '포트 입력'
	$form포트입력.add_Load($form포트입력_Load)
	#
	# textboxSendMassage
	#
	$textboxSendMassage.Font = '맑은 고딕, 11.25pt, style=Bold'
	$textboxSendMassage.Location = '192, 3'
	$textboxSendMassage.Multiline = $True
	$textboxSendMassage.Name = 'textboxSendMassage'
	$textboxSendMassage.Size = '75, 23'
	$textboxSendMassage.TabIndex = 3
	$textboxSendMassage.add_TextChanged($textboxSendMassage_TextChanged)
	#
	# label사용할RDP포트를입력해주세요
	#
	$label사용할RDP포트를입력해주세요.AutoSize = $True
	$label사용할RDP포트를입력해주세요.Location = '12, 9'
	$label사용할RDP포트를입력해주세요.Name = 'label사용할RDP포트를입력해주세요'
	$label사용할RDP포트를입력해주세요.Size = '174, 13'
	$label사용할RDP포트를입력해주세요.TabIndex = 2
	$label사용할RDP포트를입력해주세요.Text = '사용할 RDP포트를 입력해 주세요.'
	#
	# buttonOK
	#
	$buttonOK.Anchor = 'Bottom, Right'
	$buttonOK.DialogResult = 'OK'
	$buttonOK.Location = '274, 3'
	$buttonOK.Name = 'buttonOK'
	$buttonOK.Size = '75, 25'
	$buttonOK.TabIndex = 1
	$buttonOK.Text = '&OK'
	$buttonOK.UseVisualStyleBackColor = $True
	$form포트입력.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $form포트입력.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$form포트입력.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$form포트입력.add_FormClosed($Form_Cleanup_FormClosed)
	#Store the control values when form is closing
	$form포트입력.add_Closing($Form_StoreValues_Closing)
	#Show the Form
	return $form포트입력.ShowDialog()

}
#endregion Source: ChildForm.psf

#region Source: runForm.psf
function Show-runForm_psf
{
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
xAkAAB+LCAAAAAAABAC9lstu00AUhvdIvMNo1iGOcyWSY6l1CUIUiEgo7KqxfRKGjGeimXFb8wao
e56AHZsKNix4ogDvwDhOqlyxqdLIkmWPzz//uXy27LyGQFyATE6IJshcKCp4B1fLNnYfPkDIeSXp
iHLCupTBSxKBK2PeFTIqT9TQsTaeZhr/AwQa6WQCHdxPlIao/JbyUFyqcqrNziW07VEJnc2TqJcr
6VFCXsx0LKHDIdaSsBLqxT6jwXNIBmIMvOO3WqQRNJp2u1aHyuM2Rtyk0sFDs9/v6y9/Pn+afruZ
fv+JUfCeslAaCfYE11IwlVVpcu5JMQGpk7n2KNaiHxAGJzQCnuZjQpslZNccaxGaJ30hQsBu1zjl
ajxGges+/WgE1aqp2a7nG6UNx+56lbmyviZS94Si2lSFXc8Yg+wR05b8PAdwpbGb2aFdfk8uzFZz
wakg4WaO5+myY80CF6p8aI5jrQW/d2z8mc2v66/THzf/QmazO6ciIFlTW40Sarc2WrNrhsuWBUQZ
J6lHrV4gfED8ZzyEK+zaRaJnIy6cyxsFZ1TFhPV1wuCYBGNPMCGxO5AxbNMv02GwD8ar5Z/P1tbY
sDI4iqNySnxg904KS12egjafRCZGd2XFrprXvV2YlVXTwrTYbfP1qjf/C5dKYVxGoB/tTmjLyFer
yB366s2RUhCZCYFaxM5XEjdSgZCM+nuYsmPd7rruknF1CI+9s5vvmP4JHMZIkkvKR3fxqtSGjWFr
aNtho0JqJN/rXcQOUpMnJOzf6PY2Q96xlv/a3L/r/NwkxAkAAA==#>
#endregion
	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$form실행결과 = New-Object 'System.Windows.Forms.Form'
	$button닫기 = New-Object 'System.Windows.Forms.Button'
	$labelGetrunlog = New-Object 'System.Windows.Forms.Label'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	function ChangeRdp
	{
		param (
			[parameter(Mandatory = $true)]
			[ValidateNotNullOrEmpty()]
			[int]$port
		)
		
		# Set the registry value for the port
		Set-ItemProperty -Path HKLM:\SYSTEM\CurrentControlSet\Control\Termin*Server\WinStations\RDP*CP\ -Name PortNumber -Value $port
		
		# Open the firewall port for Remote Desktop and Remote Desktop FX
		netsh advfirewall firewall add rule name="Custom RDP (in)" protocol=TCP dir=in localport=$port action=allow program="System"
		netsh advfirewall firewall add rule name="Custom RDP Remote FX (in)" protocol=TCP dir=in localport=$port action=allow program='%SystemRoot%\system32\svchost.exe'
		
		# Disable the previous rules on the old port
		netsh advfirewall firewall delete rule name='Remote Desktop (TCP-In)'
		netsh advfirewall firewall delete rule name='Remote Desktop - RemoteFX (TCP-In)'
	
	}
	
	$form실행결과_Load={
		#TODO: Initialize Form Controls here
		ChangeRdp $ChildForm_textboxSendMassage
		$g = Get-ChildItem HKLM:\SYSTEM\CurrentControlSet\Control\Termin*Server\WinStations\RDP*CP\ | ForEach-Object { Get-ItemProperty $_.pspath }
		if ($g.portnumber -eq $ChildForm_textboxSendMassage)
		{
			if ((Show-successForm_psf) -eq 'OK')
			{
				
			}
			
			#		$labelGetrunlog.Text = "성공!!!`n 서버를 리부팅해야 적용 됩니다. 지금 리부팅 하시겠습니까? [Y]"
	#		$objForm.Add_KeyDown({
	#				if ($_.KeyCode -eq "Y")
	#				{ $x = $objTextBox.Text; $objForm.Close() }
	#			})
	#		$form실행결과.Close()
	#		$MainForm.Close()
		}
		
		#$labelGetrunlog.Text = $g.portnumber
		#$labelGetrunlog.text = $ChildForm_textboxSendMassage
		else
		{
			$labelGetrunlog.Text = "실패!!!`n 관리자 권한으로 실행하십시오"
		}
	}
	
	
	$button닫기_Click={
		#TODO: Place custom script here
		$form실행결과.Close()
		$MainForm.Close()
	}
	
	
	$labelGetrunlog_Click={
		#TODO: Place custom script here
		
	}
		# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$form실행결과.WindowState = $InitialFormWindowState
	}
	
	$Form_StoreValues_Closing=
	{
		#Store the control values
	}

	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$button닫기.remove_Click($button닫기_Click)
			$labelGetrunlog.remove_Click($labelGetrunlog_Click)
			$form실행결과.remove_Load($form실행결과_Load)
			$form실행결과.remove_Load($Form_StateCorrection_Load)
			$form실행결과.remove_Closing($Form_StoreValues_Closing)
			$form실행결과.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$form실행결과.SuspendLayout()
	#
	# form실행결과
	#
	$form실행결과.Controls.Add($button닫기)
	$form실행결과.Controls.Add($labelGetrunlog)
	$form실행결과.AutoScaleDimensions = '6, 13'
	$form실행결과.AutoScaleMode = 'Font'
	$form실행결과.ClientSize = '220, 143'
	$form실행결과.Name = 'form실행결과'
	$form실행결과.StartPosition = 'CenterParent'
	$form실행결과.Text = '실행 결과'
	$form실행결과.add_Load($form실행결과_Load)
	#
	# button닫기
	#
	$button닫기.Location = '75, 97'
	$button닫기.Name = 'button닫기'
	$button닫기.Size = '75, 34'
	$button닫기.TabIndex = 1
	$button닫기.Text = '닫기'
	$button닫기.UseVisualStyleBackColor = $True
	$button닫기.add_Click($button닫기_Click)
	#
	# labelGetrunlog
	#
	$labelGetrunlog.Location = '12, 19'
	$labelGetrunlog.Name = 'labelGetrunlog'
	$labelGetrunlog.Size = '196, 46'
	$labelGetrunlog.TabIndex = 0
	$labelGetrunlog.Text = 'get-runlog'
	$labelGetrunlog.add_Click($labelGetrunlog_Click)
	$form실행결과.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $form실행결과.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$form실행결과.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$form실행결과.add_FormClosed($Form_Cleanup_FormClosed)
	#Store the control values when form is closing
	$form실행결과.add_Closing($Form_StoreValues_Closing)
	#Show the Form
	return $form실행결과.ShowDialog()

}
#endregion Source: runForm.psf

#region Source: successForm.psf
function Show-successForm_psf
{
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
ug4AAB+LCAAAAAAABADNl11PE0EUhu9N/A/DXm/6RUshadfQIokRhVBE78h0ewoj051mZhapV0hq
QoQLSWwgBhIuUEKiF/JhNNE/1F3+g7PdFrRVd6tASJNNd/e8854z85zZ3cw0mGwJeG0MS4zUH0GY
ldUSkbhm3L6FUGaSk3liYTpOKDzEFTCEbZogxDjjlUhVlDPRnghfV3wKpkSyVoWsVqgJCZXIY2KV
2DMR8bT+UUe/u6Wj2XYiyUjM++kob1Npc8haYEuOqY6m7CIl5n2ozbBFsLLFdBqnzNRQfGQwCbHh
EQ1ZKpWsVlbjOccrzaPv7t4L9+2hhswFQktcSbQ8syRnVPiVqpynOKsCl7W2dlQVWpU5W0pmdWJU
1DSUQelNaIcVWwHO+w/O55WzjZcainbGi3YG/JOBLVnBxBTGSAUsr2CVy5CO4oPhpQ9YCTRjXJUS
qMlTApYskOdKkBhOKp9YLFDkLUiO8RLwgqxRz4osQ2mMYMrmA8UP8DKpKL8cW1ZCTAUES4jVr8SD
TjO6VzpQVpCYyykmiCTe+ubV3KgiTQ5gBWpnYFlqxt/t7i6pEdvxEwyXelOc8y5noq3Ajiq4byZw
EeiVNw71XNz6p+bxqZ+ys3ribn10d+t+7meNbWdv3zk8ces7zlHdefftvAPOGiduo/63TvsdZpY3
oQeb7u4Kah7vOW8aOhqJpFPVXq571RPMxP4qJpQqhMBH5r9rDOHUabe4jpLJEPEzuHjPKoGCPxEm
usWhXwIaGBhAXXWgrkLQeSWoqxR01jh01tec9f0Icg9Wml/WLiLUvW13fad5tOe+OlVBza8bd3p5
j/rohgfZ31mvnOT2/ry67e5vuluv++Ny1DIXGNeMHFODqMfVNJlfCEOkv0FOg1BJa8bk/f4gjg3r
aGg4NMddFYamMp3SUSJMu1xAGQ8NZT/pPBIwS4SNaesZk8PmYp5Rb9pnuN27/3ftreqxZi72TMJc
63LX5nrDEb14hbjxiMYT6X9BtFPhVSLa+07zR0T7SOcSEe24BiL668moEFBROIHoxLav1IyKMBmn
pHgJSGai56N2u/hNcB0el95owY7e98/1GHH8jFjz/+IVGyynyulyPF5KxfAgDvZ6UqHXUlOecbh8
o/NTH/lM9OdvVeMH/5NBFLoOAAA=#>
#endregion
	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$form변경적용 = New-Object 'System.Windows.Forms.Form'
	$label성공변경내역을적용하려면서버를리부팅해아 = New-Object 'System.Windows.Forms.Label'
	$button나중에 = New-Object 'System.Windows.Forms.Button'
	$button리부팅 = New-Object 'System.Windows.Forms.Button'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	$form변경적용_Load={
		#TODO: Initialize Form Controls here
		
	}
	
	#region Control Helper Functions
	function Load-ComboBox 
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ComboBox.
	
		.DESCRIPTION
			Use this function to dynamically load items into the ComboBox control.
	
		.PARAMETER  ComboBox
			The ComboBox control you want to add items to.
	
		.PARAMETER  Items
			The object or objects you wish to load into the ComboBox's Items collection.
	
		.PARAMETER  DisplayMember
			Indicates the property to display for the items in this control.
		
		.PARAMETER  Append
			Adds the item(s) to the ComboBox without clearing the Items collection.
		
		.EXAMPLE
			Load-ComboBox $combobox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Load-ComboBox $combobox1 "Red" -Append
			Load-ComboBox $combobox1 "White" -Append
			Load-ComboBox $combobox1 "Blue" -Append
		
		.EXAMPLE
			Load-ComboBox $combobox1 (Get-Process) "ProcessName"
	#>
		Param (
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			[System.Windows.Forms.ComboBox]$ComboBox,
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			$Items,
		    [Parameter(Mandatory=$false)]
			[string]$DisplayMember,
			[switch]$Append
		)
		
		if(-not $Append)
		{
			$ComboBox.Items.Clear()	
		}
		
		if($Items -is [Object[]])
		{
			$ComboBox.Items.AddRange($Items)
		}
		elseif ($Items -is [System.Collections.IEnumerable])
		{
			$ComboBox.BeginUpdate()
			foreach($obj in $Items)
			{
				$ComboBox.Items.Add($obj)	
			}
			$ComboBox.EndUpdate()
		}
		else
		{
			$ComboBox.Items.Add($Items)	
		}
	
		$ComboBox.DisplayMember = $DisplayMember	
	}
	#endregion
	
	$button리부팅_Click={
		#TODO: Place custom script here
		shutdown -r -t 0 -f
	}
	
	$button나중에_Click={
		#TODO: Place custom script here
		$form변경적용.close()
		$form실행결과.Close()
		$MainForm.Close()
	}
		# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$form변경적용.WindowState = $InitialFormWindowState
	}
	
	$Form_StoreValues_Closing=
	{
		#Store the control values
	}

	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$button나중에.remove_Click($button나중에_Click)
			$button리부팅.remove_Click($button리부팅_Click)
			$form변경적용.remove_Load($form변경적용_Load)
			$form변경적용.remove_Load($Form_StateCorrection_Load)
			$form변경적용.remove_Closing($Form_StoreValues_Closing)
			$form변경적용.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$form변경적용.SuspendLayout()
	#
	# form변경적용
	#
	$form변경적용.Controls.Add($label성공변경내역을적용하려면서버를리부팅해아)
	$form변경적용.Controls.Add($button나중에)
	$form변경적용.Controls.Add($button리부팅)
	$form변경적용.AcceptButton = $button리부팅
	$form변경적용.AutoScaleDimensions = '6, 13'
	$form변경적용.AutoScaleMode = 'Font'
	$form변경적용.ClientSize = '284, 100'
	$form변경적용.FormBorderStyle = 'FixedDialog'
	$form변경적용.MaximizeBox = $False
	$form변경적용.MinimizeBox = $False
	$form변경적용.Name = 'form변경적용'
	$form변경적용.StartPosition = 'CenterScreen'
	$form변경적용.Text = '변경적용'
	$form변경적용.add_Load($form변경적용_Load)
	#
	# label성공변경내역을적용하려면서버를리부팅해아
	#
	$label성공변경내역을적용하려면서버를리부팅해아.Font = '맑은 고딕, 9.75pt'
	$label성공변경내역을적용하려면서버를리부팅해아.Location = '2, 9'
	$label성공변경내역을적용하려면서버를리부팅해아.Name = 'label성공변경내역을적용하려면서버를리부팅해아'
	$label성공변경내역을적용하려면서버를리부팅해아.Size = '281, 44'
	$label성공변경내역을적용하려면서버를리부팅해아.TabIndex = 2
	$label성공변경내역을적용하려면서버를리부팅해아.Text = '성공 !!! 변경내역을 적용하려면 서버를 리부팅해아 합니다. 지금 리부팅 하시겠습니까?'
	#
	# button나중에
	#
	$button나중에.Anchor = 'Bottom, Right'
	$button나중에.DialogResult = 'OK'
	$button나중에.Location = '208, 68'
	$button나중에.Name = 'button나중에'
	$button나중에.Size = '75, 29'
	$button나중에.TabIndex = 1
	$button나중에.Text = '나중에'
	$button나중에.UseVisualStyleBackColor = $True
	$button나중에.add_Click($button나중에_Click)
	#
	# button리부팅
	#
	$button리부팅.Anchor = 'Bottom, Right'
	$button리부팅.DialogResult = 'OK'
	$button리부팅.Location = '127, 68'
	$button리부팅.Name = 'button리부팅'
	$button리부팅.Size = '75, 29'
	$button리부팅.TabIndex = 0
	$button리부팅.Text = '리부팅'
	$button리부팅.UseVisualStyleBackColor = $True
	$button리부팅.add_Click($button리부팅_Click)
	$form변경적용.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $form변경적용.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$form변경적용.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$form변경적용.add_FormClosed($Form_Cleanup_FormClosed)
	#Store the control values when form is closing
	$form변경적용.add_Closing($Form_StoreValues_Closing)
	#Show the Form
	return $form변경적용.ShowDialog()

}
#endregion Source: successForm.psf

#Start the application
Main ($CommandLine)
